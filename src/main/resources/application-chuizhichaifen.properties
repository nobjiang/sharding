#垂直拆分 专库专表

#给你的数据源起个名字
spring.shardingsphere.datasource.names=nob1

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

#数据源连接信息
spring.shardingsphere.datasource.nob1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.nob1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.nob1.url=jdbc:mysql://nj-cynosdbmysql-grp-1rw05o9d.sql.tencentcdb.com:26053/user_db?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
spring.shardingsphere.datasource.nob1.username=root
spring.shardingsphere.datasource.nob1.password=!Love521125

#指定course表的分布情况，在哪些表，在哪些库。库也有行表达式，这里只分表，写死nob1。表是表名_
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=nob1.t_user

#指定course表里面主键cid
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
#指定主键生成策略 SNOWFLAKE
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE

#指定分片策略，约定cid值偶数添加到course_1表，如果cid是奇数添加到course_2表。（注意这里的hash策略，因为我们的表是1，2后缀，偶数为0状态下寻址会出问题，所以需要+1）
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user

#打开sql输出日志
spring.shardingsphere.props.sql.show=true